name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  LIBNFC_VERSION: "1.8.0"
  LIBFREEFARE_VERSION: "0.4.0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.13.0

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config autoconf automake libtool libusb-1.0-0-dev

      - name: Build libnfc
        run: |
          wget https://github.com/nfc-tools/libnfc/releases/download/libnfc-${{ env.LIBNFC_VERSION }}/libnfc-${{ env.LIBNFC_VERSION }}.tar.bz2
          tar xjf libnfc-${{ env.LIBNFC_VERSION }}.tar.bz2
          cd libnfc-${{ env.LIBNFC_VERSION }}
          autoreconf -vis
          ./configure --prefix=/usr --sysconfdir=/etc
          make
          sudo make install
          cd ..

      - name: Build libfreefare
        run: |
          wget https://github.com/nfc-tools/libfreefare/releases/download/libfreefare-${{ env.LIBFREEFARE_VERSION }}/libfreefare-${{ env.LIBFREEFARE_VERSION }}.tar.bz2
          tar xjf libfreefare-${{ env.LIBFREEFARE_VERSION }}.tar.bz2
          cd libfreefare-${{ env.LIBFREEFARE_VERSION }}
          autoreconf -vis
          ./configure --prefix=/usr --sysconfdir=/etc
          make
          sudo make install
          cd ..

      - name: Set up cross-compilation environment
        run: |
          echo "CC=zig cc -target ${{ matrix.os }}-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "CXX=zig c++ -target ${{ matrix.os }}-${{ matrix.arch }}" >> $GITHUB_ENV
          
      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 1
        run: |
          go build -v -o davi-nfc-agent-${{ matrix.os }}-${{ matrix.arch }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: davi-nfc-agent-${{ matrix.os }}-${{ matrix.arch }}
          path: davi-nfc-agent-${{ matrix.os }}-${{ matrix.arch }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/davi-nfc-agent-*
          generate_release_notes: true
          tag_name: release-${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
